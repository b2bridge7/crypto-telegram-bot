# handlers.py

import requests
from telegram import Update
from telegram.ext import ContextTypes
from config import BINANCE_API_URL

async def get_price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) != 1:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ —Ç–∏–∫–µ—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä: /price BTCUSDT")
        return

    symbol = context.args[0].upper()
    url = f"{BINANCE_API_URL}/api/v3/ticker/24hr?symbol={symbol}"

    try:
        response = requests.get(url)
        data = response.json()

        if "code" in data:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–∫–µ—Ä")

        text = (
            f"üìä *{symbol}*\n"
            f"üí∞ –¶–µ–Ω–∞: `{data['lastPrice']}`\n"
            f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: `{data['priceChangePercent']}%`\n"
            f"üìä –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤: `{data['volume']}`\n"
            f"üî∫ –ú–∞–∫—Å–∏–º—É–º: `{data['highPrice']}`\n"
            f"üîª –ú–∏–Ω–∏–º—É–º: `{data['lowPrice']}`"
        )

        await update.message.reply_markdown(text)

    except Exception as e:
        print(e)
        await update.message.reply_text("–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å —Ç–∏–∫–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –∫—Ä–∏–ø—Ç–æ-–±–æ—Ç.\n\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "üìä /price BTCUSDT ‚Äî —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏ –æ–±—ä—ë–º\n"
        "üìà /chart BTCUSDT ‚Äî –≥—Ä–∞—Ñ–∏–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã (—Å–∫–æ—Ä–æ!)\n"
        "üìâ /rsi BTCUSDT ‚Äî –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä RSI (—Å–∫–æ—Ä–æ!)\n"
        "üî• /liquidations BTC ‚Äî –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ –ø–æ –º–æ–Ω–µ—Ç–µ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n\n"
        "üí° –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É!"
    )
    await update.message.reply_text(text)
